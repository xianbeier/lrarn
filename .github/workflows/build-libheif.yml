name: Build libheif for Windows

on:
  workflow_dispatch:

jobs:
  build-portable:
    runs-on: windows-latest
    steps:
      - name: Clone vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
        shell: cmd

      - name: Install libheif (dynamic)
        run: |
          cd vcpkg
          .\vcpkg install libheif:x64-windows
        shell: cmd

      - name: Create output directory
        run: mkdir ${{ github.workspace }}\dist\bin
        shell: cmd

      - name: Copy binaries and dependencies
        shell: pwsh
        run: |
          $vcpkgRoot = "${{ github.workspace }}\vcpkg"
          $srcBin = "$vcpkgRoot\installed\x64-windows\bin"
          $dstBin = "${{ github.workspace }}\dist\bin"

          # 复制主程序
          Copy-Item "$srcBin\heif-enc.exe" -Destination $dstBin -Force
          Copy-Item "$srcBin\heif-dec.exe" -Destination $dstBin -Force
          Copy-Item "$srcBin\libheif.dll" -Destination $dstBin -Force

          # 复制所有依赖 DLL（来自 vcpkg）
          Get-ChildItem "$srcBin\*.dll" | ForEach-Object {
              if ($_.Name -ne "libheif.dll") {
                  Copy-Item $_.FullName -Destination $dstBin -Force
              }
          }

          # 复制系统运行时（VC++ Redist）
          $systemDlls = @("vcruntime140.dll", "msvcp140.dll", "concrt140.dll", "vcruntime140_1.dll")
          foreach ($dll in $systemDlls) {
              $found = Get-ChildItem -Path "C:\Windows\System32\$dll" -ErrorAction SilentlyContinue
              if ($found) {
                  Copy-Item $found.FullName -Destination $dstBin -Force
              }
          }

          Write-Host "✅ All binaries and dependencies copied."

      - name: Verify files exist
        shell: pwsh
        run: |
          $exe1 = "${{ github.workspace }}\dist\bin\heif-enc.exe"
          $exe2 = "${{ github.workspace }}\dist\bin\heif-dec.exe"
          if (-not (Test-Path $exe1)) { throw "heif-enc.exe not found!" }
          if (-not (Test-Path $exe2)) { throw "heif-dec.exe not found!" }
          Write-Host "✅ All binaries verified."

      - name: Create VERSION file
        run: |
          echo libheif portable build via vcpkg > ${{ github.workspace }}\dist\VERSION.txt
          echo triplet: x64-windows >> ${{ github.workspace }}\dist\VERSION.txt
          echo build date: %DATE% %TIME% >> ${{ github.workspace }}\dist\VERSION.txt
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libheif-portable-windows-x64
          path: ${{ github.workspace }}\dist\
