name: Build MNN LLM Demo

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Install OpenCV
        run: |
          choco install opencv -y
          echo "C:\tools\opencv\build\x64\vc16\lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      # Step 1: Clone the repository
      - name: Clone MNN repository
        run: |
          git clone https://github.com/alibaba/MNN.git 

      - name: Clean Build Directory
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          mkdir ./MNN/build

      - name: Configure Project with MSVC and Full OpenCV
        shell: powershell
        working-directory: ${{ github.workspace }}/MNN/build
        env:
          VCPKG_ROOT: "C:/vcpkg"
        run: |
          cmake .. -G "Visual Studio 17 2022" `
            -DCMAKE_BUILD_TYPE=Release `
            -DMNN_BUILD_DEMO=ON `
            -DMNN_LOW_MEMORY=true `
            -DMNN_CPU_WEIGHT_DEQUANT_GEMM=true `
            -DMNN_BUILD_LLM=true `
            -DMNN_SUPPORT_TRANSFORMER_FUSE=true `
            -DLLM_SUPPORT_VISION=true `
            -DLLM_SUPPORT_AUDIO=true `
            -DMNN_BUILD_AUDIO=true `
            -DBUILD_MLS=true `
            -DMNN_BUILD_OPENCV=ON `
            -DMNN_IMGCODECS=ON `
            -DMNN_OPENCV_RUNTIMES=OFF `
            -DOpenCV_DIR="C:\tools\opencv\build" `
            -DCMAKE_CXX_FLAGS="/D_USE_MATH_DEFINES /EHsc"

      - name: Build All Demos
        working-directory: ${{ github.workspace }}/MNN/build
        run: |
          cmake --build . --config Release

      - name: Check if transformerDemo.out.exe exists
        shell: powershell
        working-directory: ${{ github.workspace }}/MNN/build
        run: |
          if (Test-Path "./Release/transformerDemo.out.exe") {
            Write-Output "✅ transformerDemo.out.exe built successfully!"
          } else {
            Write-Error "❌ Failed to build transformerDemo.out.exe"
          }

      - name: Package Binaries
        shell: powershell
        working-directory: ${{ github.workspace }}
        env:
          DATE: $(Get-Date -Format "yyyyMMdd")
        run: |
          $version = Get-Date -Format "yyyyMMdd"
          Compress-Archive -Path "./MNN/build/Release/*" -DestinationPath "./mnn_llm_demo_$version.zip" -Force

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mnn_llm_windows
          path: ./mnn_llm_demo_*.zip
