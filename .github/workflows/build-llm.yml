name: Build MNN LLM Demo (Windows)

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Step 1: Clone the repository
      - name: Clone MNN repository
        run: |
          git clone https://github.com/alibaba/MNN.git 
      - name: Clean Build Directory
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          mkdir ./MNN/build
      - name: Configure Project
        shell: powershell
        working-directory: ${{ github.workspace }}/MNN/build
        run: |
          cmake .. -G Ninja `
            -DCMAKE_C_COMPILER="C:\Program Files\LLVM\bin\clang.exe" `
            -DCMAKE_CXX_COMPILER="C:\Program Files\LLVM\bin\clang++.exe" `
            -DCMAKE_LINKER="C:\Program Files\LLVM\bin\lld.exe" `
            -DCMAKE_BUILD_TYPE=Release `
            -DMNN_BUILD_DEMO=ON `
            -DMNN_LOW_MEMORY=true `
            -DMNN_CPU_WEIGHT_DEQUANT_GEMM=true `
            -DMNN_BUILD_LLM=true `
            -DMNN_SUPPORT_TRANSFORMER_FUSE=true `
            -DLLM_SUPPORT_VISION=true `
            -DMNN_BUILD_OPENCV=true `
            -DMNN_IMGCODECS=true `
            -DLLM_SUPPORT_AUDIO=true `
            -DMNN_BUILD_AUDIO=true `
            -DBUILD_MLS=true  `
            -DCMAKE_CXX_FLAGS="/D_USE_MATH_DEFINES /EHsc"
      - name: Build Project
        working-directory: ${{ github.workspace }}/MNN/build
        run: | 
          ninja
      - name: Package Binaries
        shell: powershell
        working-directory: ${{ github.workspace }}
        env:
          DATE: $(Get-Date -Format "yyyyMMdd")
        run: |
          $version = Get-Date -Format "yyyyMMdd"
          Compress-Archive -Path "./MNN/build/Release/*" -DestinationPath "./mnn_llm_demo_$version.zip" -Force
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mnn_llm_windows
          path: ./mnn_llm_demo_*.zip
