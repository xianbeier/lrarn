name: Build MNN llm_demo on Windows (Full Build)

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-2022
    strategy:
      matrix:
        arch: [x64]

    steps:
    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope CurrentUser -Force
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1 '))

    - name: Install Dependencies
      run: |
        choco install -y git cmake --no-progress

    - name: Install Visual Studio Build Tools
      run: |
        choco install -y visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --includeRecommended"

    - name: Setup Visual Studio Environment
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" x64 && set > %TEMP%\vcvars.txt
      env:
        VS_VERSION: 2022

    - name: Load Visual Studio Environment Variables
      run: |
        Get-Content "$env:TEMP\vcvars.txt" | ForEach-Object {
          if ($_ -match '^([^=]+)=(.*)$') {
            [Environment]::SetEnvironmentVariable($matches[1], $matches[2], "Process")
          }
        }

    - name: Clone MNN Repository
      run: |
        git clone https://github.com/alibaba/MNN.git 

    - name: Create Build Directory
      working-directory: ./MNN
      run: |
        mkdir build
        cd build

    - name: Configure CMake for MNN with LLM, Vision, and Audio support
      working-directory: ./MNN/build
      run: |
        cmake .. ^
          -DMNN_LOW_MEMORY=true ^
          -DMNN_CPU_WEIGHT_DEQUANT_GEMM=true ^
          -DMNN_BUILD_LLM=true ^
          -DMNN_SUPPORT_TRANSFORMER_FUSE=true ^
          -DLLM_SUPPORT_VISION=true ^
          -DMNN_BUILD_OPENCV=true ^
          -DMNN_IMGCODECS=true ^
          -DLLM_SUPPORT_AUDIO=true ^
          -DMNN_BUILD_AUDIO=true ^
          -G "Visual Studio 17 2022" ^
          -A x64

    - name: Build llm_demo using MSBuild
      working-directory: ./MNN/build
      run: |
        cmake --build . --target llm_demo --config Release

    - name: Compress entire build directory
      run: |
        cd ./MNN
        Compress-Archive -Path build -DestinationPath mnn_full_build_windows.zip -Force

    - name: Upload Full Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: mnn_full_build_windows
        path: ./mnn_full_build_windows.zip
