name: Build MNN Windows (Manual Trigger)

on:
  workflow_dispatch:

jobs:
  build-windows:

    runs-on: windows-latest

    steps:
    - name: Install Chocolatey & Dependencies
      run: |
        Set-ExecutionPolicy Bypass -Scope CurrentUser -Force
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1 '))
        choco install --yes cmake git mingw make

    - name: Add MingW to PATH
      run: |
        $env:Path += ";C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin"
        echo "MINGW_GCC_VERSION=$(gcc --version)"  # Test GCC is available

    - name: Clone MNN repository
      run: |
        git clone https://github.com/alibaba/MNN.git 

    - name: Create build directory
      working-directory: MNN
      run: |
        mkdir build
        cd build

    - name: Configure CMake for MNN with LLM support (Windows)
      working-directory: MNN/build
      run: |
        cmake .. `
          -DMNN_LOW_MEMORY=true `
          -DMNN_CPU_WEIGHT_DEQUANT_GEMM=true `
          -DMNN_BUILD_LLM=true `
          -DMNN_SUPPORT_TRANSFORMER_FUSE=true `
          -DLLM_SUPPORT_VISION=true `
          -DMNN_BUILD_OPENCV=true `
          -DMNN_IMGCODECS=true `
          -DLLM_SUPPORT_AUDIO=true `
          -DMNN_BUILD_AUDIO=true `
          -G "MinGW Makefiles"

    - name: Build llm_demo
      working-directory: MNN/build
      run: |
        mingw32-make -j$(Get-CimInstance Win32_Processor | Select -ExpandProperty NumberOfLogicalProcessors) llm_demo

    - name: Compress build directory
      run: |
        cd ..
        tar -czf build_artifact_windows.tar.gz build/

    - name: Upload Windows build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mnn_build_artifact_windows
        path: MNN/build_artifact_windows.tar.gz
