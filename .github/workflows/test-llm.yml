name: Build MNN LLM Demo with Vision Support

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Step 1: Clone MNN repository
      - name: Clone MNN repository
        run: |
          git clone https://github.com/alibaba/MNN.git 

      # Step 2: Install MSVC-compatible OpenCV
      - name: Download and Build OpenCV with MSVC
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          # Clone OpenCV repository
          git clone https://github.com/opencv/opencv.git  opencv_source
          cd opencv_source

          # Create build directory
          mkdir build
          cd build

          # Configure OpenCV with MSVC
          cmake .. -G "Visual Studio 17 2022" -A x64 `
                   -DCMAKE_BUILD_TYPE=Release `
                   -DBUILD_SHARED_LIBS=OFF `
                   -DWITH_CUDA=OFF `
                   -DBUILD_opencv_world=ON `
                   -DBUILD_TESTS=OFF `
                   -DBUILD_PERF_TESTS=OFF `
                   -DBUILD_EXAMPLES=OFF

          # Build OpenCV
          cmake --build . --config Release --parallel 4

          # Install OpenCV to a specific directory
          cmake --install . --prefix "${{ github.workspace }}/opencv_install"

      # Step 3: Clean Build Directory for MNN
      - name: Clean Build Directory
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: |
          mkdir ./MNN/build

      # Step 4: Configure Project with MSVC and Vision Support
      - name: Configure Project with MSVC
        shell: powershell
        working-directory: ${{ github.workspace }}/MNN/build
        env:
          OpenCV_DIR: "${{ github.workspace }}/opencv_install/lib/cmake/opencv4"
        run: |
          cmake .. -G "Visual Studio 17 2022" -A x64 `
                   -DCMAKE_BUILD_TYPE=Release `
                   -DMNN_BUILD_DEMO=true `
                   -DMNN_LOW_MEMORY=true `
                   -DMNN_CPU_WEIGHT_DEQUANT_GEMM=true `
                   -DMNN_BUILD_LLM=true `
                   -DMNN_SUPPORT_TRANSFORMER_FUSE=true `
                   -DBUILD_MLS=true `
                   -DCMAKE_CXX_FLAGS="/D_USE_MATH_DEFINES /EHsc" `
                   -DMNN_BUILD_OPENCV=true `
                   -DMNN_IMGCODECS=true `
                   -DLLM_SUPPORT_VISION=true

      # Step 5: Build All Demos
      - name: Build All Demos
        working-directory: ${{ github.workspace }}/MNN/build
        run: |
          cmake --build . --config Release 

      # Step 6: Package Binaries
      - name: Package Binaries
        shell: powershell
        working-directory: ${{ github.workspace }}
        env:
          DATE: $(Get-Date -Format "yyyyMMdd")
        run: |
          $version = Get-Date -Format "yyyyMMdd"
          Compress-Archive -Path "./MNN/build/Release/*" -DestinationPath "./mnn_llm_demo_$version.zip" -Force

      # Step 7: Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mnn_llm_windows
          path: ./mnn_llm_demo_*.zip
